user www-data;
worker_processes auto;
worker_rlimit_nofile 8192;
pid /run/nginx.pid;

events {
    worker_connections 4096;
}

http {
    include mime.types;
    default_type application/octet-stream;

    charset utf-8;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    http2_max_field_size 4k;
    http2_max_header_size 16k;

    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    http2_recv_timeout 30s;

    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 256;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;

    ssl_certificate /etc/letsencrypt/live/attestation.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/attestation.app/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    ssl_trusted_certificate /etc/letsencrypt/live/attestation.app/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    # maintained by certbot-ocsp-fetcher
    ssl_stapling_file /etc/nginx/ocsp-cache/attestation.app.der;

    access_log /var/log/nginx/access.log combined buffer=64k flush=1m;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_proxied any;
    gzip_types application/json;
    gzip_vary on;

    if_modified_since before;

    upstream backend {
        server localhost:8080 max_conns=512 fail_timeout=1s;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name www.attestation.app attestation.app attestation.grapheneos.org;

        root /var/empty;

        return 301 https://attestation.app$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.attestation.app attestation.grapheneos.org;

        root /var/empty;

        include /etc/nginx/snippets/security-headers.conf;

        return 301 https://attestation.app$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name attestation.app;

        root /var/www/html;
        error_page 403 =404 /404.html;
        error_page 404 /404.html;

        include /etc/nginx/snippets/security-headers.conf;
        gzip_static on;

        if ($request_uri ~ ^/(.*)\.html$) {
            return 301 /$1;
        }

        location = /security.txt {
            return 301 /.well-known/security.txt;
        }

        location = /safari_pinned_tab_icon.svg {
            return 301 /mask-icon.svg;
        }

        location = /bitcoin_address.png {
            return 301 /bitcoin-donation.png;
        }

        location = /bitcoin-address.png {
            return 301 /bitcoin-donation.png;
        }

        location = /LICENSE {
            return 301 /LICENSE.txt;
        }

        location = /404 {
            internal;
            http2_push /attestation.css?14;
        }

        location = /404.html {
            internal;
            http2_push /attestation.css?14;
        }

        location = /submit {
            client_max_body_size 64k;
            client_body_buffer_size 16k;
            proxy_pass http://backend;
        }

        location = /challenge {
            proxy_pass http://backend;
        }

        location = /verify {
            client_max_body_size 4k;
            client_body_buffer_size 4k;
            proxy_pass http://backend;
        }

        location ^~ /api/ {
            proxy_pass http://backend;
        }

        location ~ "^(.*)/index$" {
            return 301 $1/;
        }

        location ~ "\.(ico|webmanifest)$" {
            include /etc/nginx/snippets/security-headers.conf;
            add_header Cache-Control "public, max-age=604800";
        }

        location ~ "\.(css|js|svg)$" {
            include /etc/nginx/snippets/security-headers.conf;
            add_header Cache-Control "public, max-age=31536000";
        }

        location ~ "\.(png|woff2)$" {
            include /etc/nginx/snippets/security-headers.conf;
            add_header Cache-Control "public, max-age=31536000";
            gzip_static off;
        }

        location ~ "\.(json|txt|xml)$" {
            include /etc/nginx/snippets/security-headers.conf;
            add_header Cache-Control "public, max-age=1800";
        }

        # http://www.twipu.com/GrapheneOS doesn't handle links with fragments properly
        location ~ "^/(.*)<a href=$" {
            return 301 https://attestation.app/$1;
        }

        location ~ "\.(br|gz)" {
            internal;
        }

        location / {
            include /etc/nginx/snippets/security-headers.conf;
            add_header Cache-Control "public, max-age=1800";
            try_files $uri $uri.html $uri/ =404;
            http2_push /attestation.css?14;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name mta-sts.attestation.app;

        root /var/empty;

        return 301 https://mta-sts.attestation.app$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name mta-sts.attestation.app;

        root /var/www/mta-sts;

        include /etc/nginx/snippets/security-headers.conf;
    }
}
